"""update_billing_models_for_tests

Revision ID: 9c4533e6d07c
Revises: c8c4b27b3053
Create Date: 2025-03-14 06:44:05.610646

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9c4533e6d07c'
down_revision: Union[str, None] = 'c8c4b27b3053'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tariff_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('monthly_fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('speed_limit', sa.Integer(), nullable=True),
    sa.Column('data_cap', sa.Integer(), nullable=True),
    sa.Column('fup_threshold', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_tariff_plans_id'), 'tariff_plans', ['id'], unique=False)
    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('full_name', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('phone', sa.String(length=32), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_customers_id'), 'customers', ['id'], unique=False)
    op.create_table('radius_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('speed_limit', sa.Integer(), nullable=True),
    sa.Column('data_cap', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_radius_profiles_id'), 'radius_profiles', ['id'], unique=False)
    op.create_table('resellers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('company_name', sa.String(length=128), nullable=False),
    sa.Column('contact_person', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('phone', sa.String(length=32), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('tax_id', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('tier', sa.String(length=32), nullable=True),
    sa.Column('commission_type', sa.String(length=32), nullable=True),
    sa.Column('commission_rate', sa.Float(), nullable=True),
    sa.Column('credit_limit', sa.Float(), nullable=True),
    sa.Column('current_balance', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_resellers_id'), 'resellers', ['id'], unique=False)
    op.create_table('system_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=128), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key')
    )
    op.create_index(op.f('ix_system_config_id'), 'system_config', ['id'], unique=False)
    op.create_table('radius_accounting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=64), nullable=True),
    sa.Column('profile_id', sa.Integer(), nullable=True),
    sa.Column('nas_ip_address', sa.String(length=45), nullable=True),
    sa.Column('bytes_in', sa.Integer(), nullable=True),
    sa.Column('bytes_out', sa.Integer(), nullable=True),
    sa.Column('session_time', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('stop_time', sa.DateTime(), nullable=True),
    sa.Column('terminate_cause', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['radius_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_radius_accounting_id'), 'radius_accounting', ['id'], unique=False)
    op.create_index(op.f('ix_radius_accounting_session_id'), 'radius_accounting', ['session_id'], unique=True)
    op.create_table('reseller_commission_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reseller_id', sa.Integer(), nullable=True),
    sa.Column('tariff_plan_id', sa.Integer(), nullable=True),
    sa.Column('commission_type', sa.String(length=32), nullable=False),
    sa.Column('commission_rate', sa.Float(), nullable=False),
    sa.Column('min_customers', sa.Integer(), nullable=True),
    sa.Column('max_customers', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reseller_id'], ['resellers.id'], ),
    sa.ForeignKeyConstraint(['tariff_plan_id'], ['tariff_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reseller_commission_rules_id'), 'reseller_commission_rules', ['id'], unique=False)
    op.create_table('reseller_customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reseller_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['reseller_id'], ['resellers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reseller_customers_id'), 'reseller_customers', ['id'], unique=False)
    op.create_table('reseller_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reseller_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('transaction_type', sa.String(length=32), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('reference_id', sa.String(length=128), nullable=True),
    sa.Column('balance_after', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reseller_id'], ['resellers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reseller_transactions_id'), 'reseller_transactions', ['id'], unique=False)
    op.create_table('tickets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('priority', sa.String(length=32), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('source', sa.String(length=32), nullable=True),
    sa.Column('assigned_to', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tickets_id'), 'tickets', ['id'], unique=False)
    op.create_table('ticket_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ticket_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('is_internal', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['ticket_id'], ['tickets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ticket_comments_id'), 'ticket_comments', ['id'], unique=False)
    op.alter_column('credit_note_applications', 'credit_note_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('credit_note_applications', 'invoice_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('credit_note_applications', 'applied_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_credit_note_applications_invoice_id', table_name='credit_note_applications')
    op.create_index(op.f('ix_credit_note_applications_id'), 'credit_note_applications', ['id'], unique=False)
    op.add_column('credit_notes', sa.Column('reference_invoice_id', sa.Integer(), nullable=True))
    op.add_column('credit_notes', sa.Column('applied_at', sa.DateTime(), nullable=True))
    op.alter_column('credit_notes', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('credit_notes', 'reason',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               nullable=False)
    op.alter_column('credit_notes', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               nullable=True)
    op.alter_column('credit_notes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_credit_notes_status', table_name='credit_notes')
    op.drop_index('ix_credit_notes_user_id', table_name='credit_notes')
    op.create_index(op.f('ix_credit_notes_id'), 'credit_notes', ['id'], unique=False)
    op.create_foreign_key(None, 'credit_notes', 'invoices', ['reference_invoice_id'], ['id'])
    op.drop_column('credit_notes', 'updated_at')
    op.add_column('discounts', sa.Column('applicable_plans', sa.JSON(), nullable=True))
    op.alter_column('discounts', 'name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=128),
               existing_nullable=False)
    op.alter_column('discounts', 'description',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('discounts', 'discount_type',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=32),
               existing_nullable=False)
    op.alter_column('discounts', 'is_percentage',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('discounts', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('discounts', 'valid_from',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('discounts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('discounts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_discounts_is_active', table_name='discounts')
    op.create_index(op.f('ix_discounts_id'), 'discounts', ['id'], unique=False)
    op.alter_column('invoice_discounts', 'invoice_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('invoice_discounts', 'discount_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('invoice_discounts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_invoice_discounts_invoice_id', table_name='invoice_discounts')
    op.create_index(op.f('ix_invoice_discounts_id'), 'invoice_discounts', ['id'], unique=False)
    op.add_column('invoice_taxes', sa.Column('taxable_amount', sa.Numeric(precision=10, scale=2), nullable=False))
    op.alter_column('invoice_taxes', 'invoice_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('invoice_taxes', 'tax_rate_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('invoice_taxes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_invoice_taxes_invoice_id', table_name='invoice_taxes')
    op.create_index(op.f('ix_invoice_taxes_id'), 'invoice_taxes', ['id'], unique=False)
    op.add_column('invoices', sa.Column('paid_at', sa.DateTime(), nullable=True))
    op.alter_column('invoices', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('invoices', 'status',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
    op.alter_column('invoices', 'due_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('invoices', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_invoices_status', table_name='invoices')
    op.drop_index('ix_invoices_user_id', table_name='invoices')
    op.create_index(op.f('ix_invoices_id'), 'invoices', ['id'], unique=False)
    op.drop_column('invoices', 'updated_at')
    op.add_column('payments', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.alter_column('payments', 'invoice_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('payments', 'payment_method',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=32),
               nullable=True)
    op.alter_column('payments', 'transaction_id',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=128),
               existing_nullable=True)
    op.alter_column('payments', 'status',
               existing_type=sa.VARCHAR(length=32),
               nullable=True)
    op.drop_index('ix_payments_invoice_id', table_name='payments')
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_unique_constraint(None, 'payments', ['transaction_id'])
    op.drop_column('payments', 'payment_date')
    op.add_column('tax_rates', sa.Column('is_default', sa.Boolean(), nullable=True))
    op.alter_column('tax_rates', 'name',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=128),
               existing_nullable=False)
    op.alter_column('tax_rates', 'description',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('tax_rates', 'country',
               existing_type=sa.VARCHAR(length=2),
               type_=sa.String(length=64),
               existing_nullable=False)
    op.alter_column('tax_rates', 'region',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=128),
               existing_nullable=True)
    op.alter_column('tax_rates', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('tax_rates', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_tax_rates_country', table_name='tax_rates')
    op.drop_index('ix_tax_rates_is_active', table_name='tax_rates')
    op.create_index(op.f('ix_tax_rates_id'), 'tax_rates', ['id'], unique=False)
    op.drop_column('tax_rates', 'is_active')
    op.add_column('users', sa.Column('role', sa.String(length=32), nullable=True))
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=64),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=128),
               existing_nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=128),
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_username_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.drop_column('users', 'is_superuser')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_column('users', 'role')
    op.add_column('tax_rates', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_tax_rates_id'), table_name='tax_rates')
    op.create_index('ix_tax_rates_is_active', 'tax_rates', ['is_active'], unique=False)
    op.create_index('ix_tax_rates_country', 'tax_rates', ['country'], unique=False)
    op.alter_column('tax_rates', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('tax_rates', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('tax_rates', 'region',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.alter_column('tax_rates', 'country',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=2),
               existing_nullable=False)
    op.alter_column('tax_rates', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('tax_rates', 'name',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('tax_rates', 'is_default')
    op.add_column('payments', sa.Column('payment_date', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'payments', type_='unique')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.create_index('ix_payments_invoice_id', 'payments', ['invoice_id'], unique=False)
    op.alter_column('payments', 'status',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)
    op.alter_column('payments', 'transaction_id',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
    op.alter_column('payments', 'payment_method',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('payments', 'invoice_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('payments', 'created_at')
    op.add_column('invoices', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_invoices_id'), table_name='invoices')
    op.create_index('ix_invoices_user_id', 'invoices', ['user_id'], unique=False)
    op.create_index('ix_invoices_status', 'invoices', ['status'], unique=False)
    op.alter_column('invoices', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('invoices', 'due_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('invoices', 'status',
               existing_type=sa.VARCHAR(length=32),
               nullable=False)
    op.alter_column('invoices', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('invoices', 'paid_at')
    op.drop_index(op.f('ix_invoice_taxes_id'), table_name='invoice_taxes')
    op.create_index('ix_invoice_taxes_invoice_id', 'invoice_taxes', ['invoice_id'], unique=False)
    op.alter_column('invoice_taxes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('invoice_taxes', 'tax_rate_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('invoice_taxes', 'invoice_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('invoice_taxes', 'taxable_amount')
    op.drop_index(op.f('ix_invoice_discounts_id'), table_name='invoice_discounts')
    op.create_index('ix_invoice_discounts_invoice_id', 'invoice_discounts', ['invoice_id'], unique=False)
    op.alter_column('invoice_discounts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('invoice_discounts', 'discount_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('invoice_discounts', 'invoice_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index(op.f('ix_discounts_id'), table_name='discounts')
    op.create_index('ix_discounts_is_active', 'discounts', ['is_active'], unique=False)
    op.alter_column('discounts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('discounts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('discounts', 'valid_from',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('discounts', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('discounts', 'is_percentage',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('discounts', 'discount_type',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('discounts', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('discounts', 'name',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('discounts', 'applicable_plans')
    op.add_column('credit_notes', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'credit_notes', type_='foreignkey')
    op.drop_index(op.f('ix_credit_notes_id'), table_name='credit_notes')
    op.create_index('ix_credit_notes_user_id', 'credit_notes', ['user_id'], unique=False)
    op.create_index('ix_credit_notes_status', 'credit_notes', ['status'], unique=False)
    op.alter_column('credit_notes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('credit_notes', 'status',
               existing_type=sa.String(length=32),
               type_=sa.VARCHAR(length=20),
               nullable=False)
    op.alter_column('credit_notes', 'reason',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('credit_notes', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('credit_notes', 'applied_at')
    op.drop_column('credit_notes', 'reference_invoice_id')
    op.drop_index(op.f('ix_credit_note_applications_id'), table_name='credit_note_applications')
    op.create_index('ix_credit_note_applications_invoice_id', 'credit_note_applications', ['invoice_id'], unique=False)
    op.alter_column('credit_note_applications', 'applied_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('credit_note_applications', 'invoice_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('credit_note_applications', 'credit_note_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index(op.f('ix_ticket_comments_id'), table_name='ticket_comments')
    op.drop_table('ticket_comments')
    op.drop_index(op.f('ix_tickets_id'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_index(op.f('ix_reseller_transactions_id'), table_name='reseller_transactions')
    op.drop_table('reseller_transactions')
    op.drop_index(op.f('ix_reseller_customers_id'), table_name='reseller_customers')
    op.drop_table('reseller_customers')
    op.drop_index(op.f('ix_reseller_commission_rules_id'), table_name='reseller_commission_rules')
    op.drop_table('reseller_commission_rules')
    op.drop_index(op.f('ix_radius_accounting_session_id'), table_name='radius_accounting')
    op.drop_index(op.f('ix_radius_accounting_id'), table_name='radius_accounting')
    op.drop_table('radius_accounting')
    op.drop_index(op.f('ix_system_config_id'), table_name='system_config')
    op.drop_table('system_config')
    op.drop_index(op.f('ix_resellers_id'), table_name='resellers')
    op.drop_table('resellers')
    op.drop_index(op.f('ix_radius_profiles_id'), table_name='radius_profiles')
    op.drop_table('radius_profiles')
    op.drop_index(op.f('ix_customers_id'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_tariff_plans_id'), table_name='tariff_plans')
    op.drop_table('tariff_plans')
    # ### end Alembic commands ###
