apiVersion: v1
kind: ConfigMap
metadata:
  name: tariff-module-config
  namespace: isp-management
  labels:
    app: tariff-module
data:
  LOGGING_LEVEL: "INFO"
  RADIUS_API_URL: "http://radius-module-service:8000/radius"
  RADIUS_API_TIMEOUT: "10.0"
  CELERY_BROKER_URL: "redis://redis-service:6379/0"
  CELERY_RESULT_BACKEND: "redis://redis-service:6379/0"
  ELASTICSEARCH_ENABLED: "true"
  ELASTICSEARCH_URL: "http://elasticsearch-service:9200"
  ELASTICSEARCH_VERIFY_CERTS: "false"
---
apiVersion: v1
kind: Secret
metadata:
  name: tariff-module-secrets
  namespace: isp-management
  labels:
    app: tariff-module
type: Opaque
data:
  # These are placeholders and should be replaced with actual base64-encoded values
  DATABASE_URL: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBhc3N3b3JkQHBvc3RncmVzLXNlcnZpY2U6NTQzMi9pc3BfbWFuYWdlbWVudA==
  SECRET_KEY: c2VjcmV0X2tleV9mb3JfcHJvZHVjdGlvbg==
  RADIUS_API_KEY: cmFkaXVzX2FwaV9rZXlfZm9yX3Byb2R1Y3Rpb24=
  ELASTICSEARCH_USERNAME: ZWxhc3RpY3NlYXJjaA==
  ELASTICSEARCH_PASSWORD: cGFzc3dvcmQ=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tariff-module
  namespace: isp-management
  labels:
    app: tariff-module
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tariff-module
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: tariff-module
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: tariff-module
        image: ghcr.io/your-org/isp-management/tariff-module:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        envFrom:
        - configMapRef:
            name: tariff-module-config
        - secretRef:
            name: tariff-module-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: tariff-module-service
  namespace: isp-management
  labels:
    app: tariff-module
spec:
  selector:
    app: tariff-module
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tariff-module-ingress
  namespace: isp-management
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.isp-management.example.com
    secretName: tariff-module-tls
  rules:
  - host: api.isp-management.example.com
    http:
      paths:
      - path: /tariff
        pathType: Prefix
        backend:
          service:
            name: tariff-module-service
            port:
              number: 8000
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: tariff-module-pdb
  namespace: isp-management
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: tariff-module
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tariff-module-hpa
  namespace: isp-management
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tariff-module
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: tariff-scheduled-tasks
  namespace: isp-management
spec:
  schedule: "0 * * * *"  # Run every hour
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: tariff-scheduled-tasks
            image: ghcr.io/your-org/isp-management/tariff-module:latest
            imagePullPolicy: Always
            command:
            - python
            - -m
            - modules.tariff.tasks.run_scheduled_tasks
            envFrom:
            - configMapRef:
                name: tariff-module-config
            - secretRef:
                name: tariff-module-secrets
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 300m
                memory: 256Mi
          restartPolicy: OnFailure
